<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>339.2</string>
	<key>AMApplicationVersion</key>
	<string>2.2.4</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>*</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>v.1.0.1</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>variableUUID</key>
					<dict>
						<key>isPathPopUp</key>
						<false/>
						<key>selectedVariableUUID</key>
						<string>7364B882-558E-4E84-A59B-A718A55ACB48</string>
						<key>variableUUIDsInMenu</key>
						<array/>
					</dict>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>*</string>
					</array>
				</dict>
				<key>AMRequiredResources</key>
				<array/>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Get Value of Variable.action</string>
				<key>ActionName</key>
				<string>変数の値を取得</string>
				<key>ActionParameters</key>
				<dict>
					<key>variableUUID</key>
					<string>7364B882-558E-4E84-A59B-A718A55ACB48</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.Get_Value_of_Variable</string>
				<key>CFBundleVersion</key>
				<string>1.0.1</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>Get_Value_of_Variable</string>
				<key>IgnoresInput</key>
				<false/>
				<key>InputUUID</key>
				<string>2D252134-2B2A-4EBB-855A-3256C733B673</string>
				<key>Keywords</key>
				<array>
					<string>変数</string>
					<string>バインド</string>
					<string>入力</string>
					<string>出力</string>
					<string>記憶装置</string>
				</array>
				<key>OutputUUID</key>
				<string>FA84C73E-73F1-43CA-B9A1-FCDF527EF581</string>
				<key>UUID</key>
				<string>4FA05E3A-E1BE-4A29-ACCD-2A2D906F321F</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>variableUUID</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<false/>
				<key>location</key>
				<string>368.000000:655.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Get Value of Variable.action/Contents/Resources/Japanese.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<false/>
		</dict>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>*</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>v.1.0.1</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>variableUUID</key>
					<dict>
						<key>isPathPopUp</key>
						<false/>
						<key>selectedVariableUUID</key>
						<string>747E0CFA-A954-4B86-93A7-179EFAD139CD</string>
						<key>variableUUIDsInMenu</key>
						<array/>
					</dict>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>*</string>
					</array>
				</dict>
				<key>AMRequiredResources</key>
				<array/>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Get Value of Variable.action</string>
				<key>ActionName</key>
				<string>変数の値を取得</string>
				<key>ActionParameters</key>
				<dict>
					<key>variableUUID</key>
					<string>747E0CFA-A954-4B86-93A7-179EFAD139CD</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.Get_Value_of_Variable</string>
				<key>CFBundleVersion</key>
				<string>1.0.1</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>Get_Value_of_Variable</string>
				<key>InputUUID</key>
				<string>82A8B756-4331-4B23-B804-00D21ADE22C8</string>
				<key>Keywords</key>
				<array>
					<string>変数</string>
					<string>バインド</string>
					<string>入力</string>
					<string>出力</string>
					<string>記憶装置</string>
				</array>
				<key>OutputUUID</key>
				<string>BB977EED-E41D-4FB7-A007-C1334C439AE3</string>
				<key>UUID</key>
				<string>82D60A41-E4CF-4A9C-9BA8-87450964BDF8</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>variableUUID</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<false/>
				<key>location</key>
				<string>368.000000:613.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Get Value of Variable.action/Contents/Resources/Japanese.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<false/>
		</dict>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>*</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>v.1.0.1</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>variableUUID</key>
					<dict>
						<key>isPathPopUp</key>
						<false/>
						<key>selectedVariableUUID</key>
						<string>85AEEE68-07D5-4231-A52B-270AAC690764</string>
						<key>variableUUIDsInMenu</key>
						<array/>
					</dict>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>*</string>
					</array>
				</dict>
				<key>AMRequiredResources</key>
				<array/>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Get Value of Variable.action</string>
				<key>ActionName</key>
				<string>変数の値を取得</string>
				<key>ActionParameters</key>
				<dict>
					<key>variableUUID</key>
					<string>85AEEE68-07D5-4231-A52B-270AAC690764</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.Get_Value_of_Variable</string>
				<key>CFBundleVersion</key>
				<string>1.0.1</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>Get_Value_of_Variable</string>
				<key>InputUUID</key>
				<string>116403FA-1504-4032-A6E0-D9FEEC9A3070</string>
				<key>Keywords</key>
				<array>
					<string>変数</string>
					<string>バインド</string>
					<string>入力</string>
					<string>出力</string>
					<string>記憶装置</string>
				</array>
				<key>OutputUUID</key>
				<string>43A4CC5E-54E5-4FF5-ACC0-58008C0EF8A6</string>
				<key>UUID</key>
				<string>541AD757-541A-4F60-B912-85DC2C4C7E7D</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>variableUUID</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<false/>
				<key>location</key>
				<string>368.000000:571.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Get Value of Variable.action/Contents/Resources/Japanese.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<false/>
		</dict>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>*</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>v.1.0.1</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>variableUUID</key>
					<dict>
						<key>isPathPopUp</key>
						<false/>
						<key>selectedVariableUUID</key>
						<string>0B3B7B56-A951-4FF3-B27D-8FF98CBB6384</string>
					</dict>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>*</string>
					</array>
				</dict>
				<key>AMRequiredResources</key>
				<array/>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Get Value of Variable.action</string>
				<key>ActionName</key>
				<string>変数の値を取得</string>
				<key>ActionParameters</key>
				<dict>
					<key>variableUUID</key>
					<string>0B3B7B56-A951-4FF3-B27D-8FF98CBB6384</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.Get_Value_of_Variable</string>
				<key>CFBundleVersion</key>
				<string>1.0.1</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>Get_Value_of_Variable</string>
				<key>InputUUID</key>
				<string>391B52F1-8CFD-4632-BA90-1DDF9CCB827C</string>
				<key>Keywords</key>
				<array>
					<string>変数</string>
					<string>バインド</string>
					<string>入力</string>
					<string>出力</string>
					<string>記憶装置</string>
				</array>
				<key>OutputUUID</key>
				<string>FF015BCF-D56D-4678-A4E0-58D5B1485B4B</string>
				<key>UUID</key>
				<string>19297C18-CDBE-4306-A30C-92B74DC80BA7</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>variableUUID</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<false/>
				<key>location</key>
				<string>368.000000:529.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Get Value of Variable.action/Contents/Resources/Japanese.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<false/>
		</dict>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>*</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>v.1.0.1</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>variableUUID</key>
					<dict>
						<key>isPathPopUp</key>
						<false/>
						<key>selectedVariableUUID</key>
						<string>F8D7B816-BD1C-415D-BF7B-5901451BDBAA</string>
					</dict>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>*</string>
					</array>
				</dict>
				<key>AMRequiredResources</key>
				<array/>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Get Value of Variable.action</string>
				<key>ActionName</key>
				<string>変数の値を取得</string>
				<key>ActionParameters</key>
				<dict>
					<key>variableUUID</key>
					<string>F8D7B816-BD1C-415D-BF7B-5901451BDBAA</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.Get_Value_of_Variable</string>
				<key>CFBundleVersion</key>
				<string>1.0.1</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>Get_Value_of_Variable</string>
				<key>InputUUID</key>
				<string>AD3CAC0C-98AB-4CC0-9BA8-C17A84F121B0</string>
				<key>Keywords</key>
				<array>
					<string>変数</string>
					<string>バインド</string>
					<string>入力</string>
					<string>出力</string>
					<string>記憶装置</string>
				</array>
				<key>OutputUUID</key>
				<string>3D1BC123-DF43-4D6F-B2B8-62765FC541CE</string>
				<key>UUID</key>
				<string>168C68D1-8563-4E7C-A742-D6787FE51A44</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>variableUUID</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<false/>
				<key>location</key>
				<string>368.000000:487.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Get Value of Variable.action/Contents/Resources/Japanese.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<false/>
		</dict>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>シェルスクリプトを実行</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>#!/usr/bin/env python
# vim: fileencoding=utf-8
import sys
import urllib
import json
import locale
import subprocess
import imghdr
import struct
import string

locale.setlocale(locale.LC_ALL, "ja_JP")

cnt = sys.argv[1] # 検索の最大件数
aff = sys.argv[2] # LinkShare ID
scs = sys.argv[3] # スクショの長辺px
ipd = sys.argv[4] # iPadスクショの長辺px
mac = sys.argv[5] # Macスクショの長辺px


# テンプレートの予約語(40個)
# ['appname', 'version', 'price', 'title', 'category', 'appsize', 'pubdate',
#  'seller', 'sellersite', 'selleritunes', 'linkshareurl', 'url',
#  'icon175url', 'icon100url', 'icon75url', 'icon53url',
#  'moveos', 'os', 'gamecenter', 'univ', 'lang', 'rating', 'curverrating',
#  'curverstar', 'curreviewcnt', 'allverrating', 'allverstar', 'allreviewcnt',
#  'desc', 'descnew',
#  'image1', 'image2', 'image3', 'image4', 'image5',
#  'univimage1', 'univimage2', 'univimage3', 'univimage4', 'univimage5'];

# proxy
proxies = None

def inputKeyword():
    cmd = ('osascript -e '
            '\'tell application "MarsEdit"'
            ' to display dialog "検索キーワードを入力してください"'
            ' buttons {"Cancel", "OK"} default button "OK" default answer ""\'')
    p = subprocess.Popen(cmd, shell=True, close_fds=True,
            stdin=subprocess.PIPE,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE)
    (stdout, stderr) = p.communicate(None)

    result = ""
    if p.returncode != 0:
        result = None
    else:
        line = stdout.replace('\n', '')
        result = line.split(',')[0].split(':')[1]
    return result

kinds = ['iPhone App', 'iPad App', 'Mac App']
kindsDict = dict(zip(kinds, ['software', 'iPadSoftware', 'macSoftware']))
def chooseAppKind():
    keys = '{%s}' % ",".join(['"%s"' % k for k in kinds])
    cmd = ('osascript -e '
            '\'tell application "MarsEdit"'
            ' to choose from list %s'
            ' with prompt "検索対象を選択してください"'
            ' cancel button name "Cancel"'
            ' without multiple selections allowed\''
            ) % keys
    p = subprocess.Popen(cmd, shell=True, close_fds=True,
            stdin=subprocess.PIPE,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE)
    (stdout, stderr) = p.communicate(None)
    key = stdout.rstrip('\n')

    result = ""
    if key == 'false':
        result = None
    else:
        result = kindsDict[key]
    return result

templates = [
    'フル表示(SSフル+説明付)',
    'フル表示(SS2枚)',
    '大アイコン表示',
    '中アイコン表示',
    '小アイコン表示',
    'リンクのみ'
]
templatesDict = dict(zip(templates, [
    u"&lt;h2&gt;&lt;span style='color: rgb(0, 0, 255);'&gt;${title}&lt;/span&gt;&lt;/h2&gt;&lt;a href='${linkshareurl}' target='_blank' rel='nofollow'&gt;&lt;img width='100' class='alignleft' align='left' src='${icon100url}' style='border-radius: 20px 20px 20px 20px;-moz-border-radius: 20px 20px 20px 20px;-webkit-border-radius: 20px 20px 20px 20px;box-shadow: 1px 4px 6px 1px #999999;-moz-box-shadow: 1px 4px 6px 1px #999999;-webkit-box-shadow: 1px 4px 6px 1px #999999;margin: -5px 15px 1px 5px;'&gt;&lt;/a&gt; カテゴリ: ${category}&lt;br&gt; 現在の価格: ${price}（サイズ: ${appsize}）&lt;br&gt; 販売元: &lt;a href='${selleritunes}' target='_blank' rel='nofollow'&gt;${seller}&lt;/a&gt;&lt;br&gt; リリース日: ${pubdate}&lt;br style='clear: both;'&gt;&lt;br&gt;&lt;a href='${linkshareurl}' target='_blank' rel='nofollow'&gt;&lt;img src='${storeButton}' style='vertical-align:bottom;' alt='App'&gt;&lt;/a&gt; ${gamecenter} ${univ}&lt;br&gt;&lt;br&gt;現在のバージョンの評価: ${curverstar}（${curreviewcnt}）&lt;br&gt;全てのバージョンの評価: ${allverstar}（${allreviewcnt}）&lt;br&gt;&lt;br&gt;&lt;strong&gt;What’s New&lt;/strong&gt;&lt;br&gt;${descnew}&lt;br&gt;&lt;br&gt;${image1} ${image2} ${image3} ${image4} ${image5}&lt;br&gt;&lt;br&gt;${univimage1} ${univimage2} ${univimage3} ${univimage4} ${univimage5}&lt;br&gt;&lt;br&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;br&gt;${desc}&lt;br&gt;",
    u"&lt;h2&gt;&lt;span style='color: rgb(0, 0, 255);'&gt;${title}&lt;/span&gt;&lt;/h2&gt;&lt;a href='${linkshareurl}' target='_blank' rel='nofollow'&gt;&lt;img width='100' class='alignleft' align='left' src='${icon100url}' style='border-radius: 20px 20px 20px 20px;-moz-border-radius: 20px 20px 20px 20px;-webkit-border-radius: 20px 20px 20px 20px;box-shadow: 1px 4px 6px 1px #999999;-moz-box-shadow: 1px 4px 6px 1px #999999;-webkit-box-shadow: 1px 4px 6px 1px #999999;margin: -5px 15px 1px 5px;'&gt;&lt;/a&gt; カテゴリ: ${category}&lt;br&gt; 現在の価格: ${price}（サイズ: ${appsize}）&lt;br&gt; 販売元: &lt;a href='${selleritunes}' target='_blank' rel='nofollow'&gt;${seller}&lt;/a&gt;&lt;br&gt; リリース日: ${pubdate}&lt;br style='clear: both;'&gt;&lt;br&gt;&lt;a href='${linkshareurl}' target='_blank' rel='nofollow'&gt;&lt;img src='${storeButton}' style='vertical-align:bottom;' alt='App'&gt;&lt;/a&gt; ${gamecenter} ${univ}&lt;br&gt;&lt;br&gt; 現在のバージョンの評価: ${curverstar}（${curreviewcnt}）&lt;br&gt; 全てのバージョンの評価: ${allverstar}（${allreviewcnt}）&lt;br&gt;&lt;br&gt;${image1} ${image2}&lt;br&gt;",
    u"&lt;h2&gt;&lt;span style='color: rgb(0, 0, 255);'&gt;${title}&lt;/span&gt;&lt;/h2&gt;&lt;a href='${linkshareurl}' target='_blank' rel='nofollow'&gt;&lt;img width='175' class='alignleft' align='left' src='${icon175url}' style='border-radius: 25px 25px 25px 25px;-moz-border-radius: 25px 25px 25px 25px;-webkit-border-radius: 25px 25px 25px 25px;box-shadow: 1px 4px 6px 1px #999999;-moz-box-shadow: 1px 4px 6px 1px #999999;-webkit-box-shadow: 1px 4px 6px 1px #999999;margin: -5px 15px 1px 5px;'&gt;&lt;/a&gt; カテゴリ: ${category}&lt;br&gt; 現在の価格: ${price}（サイズ: ${appsize}）&lt;br&gt; 販売元: &lt;a href='${selleritunes}' target='_blank' rel='nofollow'&gt;${seller}&lt;/a&gt;&lt;br&gt; リリース日: ${pubdate}&lt;br&gt; 現在のバージョンの評価: ${curverstar}（${curreviewcnt}）&lt;br&gt; 全てのバージョンの評価: ${allverstar}（${allreviewcnt}）&lt;br&gt;&lt;a href='${linkshareurl}' target='_blank' rel='nofollow'&gt;&lt;img src='${storeButton}' style='vertical-align:bottom;' alt='App'&gt;&lt;/a&gt; ${univ}&lt;br&gt; ${gamecenter}&lt;br style='clear: both;'&gt;",
    u"&lt;a href='${linkshareurl}' target='_blank' rel='nofollow'&gt;&lt;img width='100' class='alignleft' align='left' src='${icon100url}' style='border-radius: 20px 20px 20px 20px;-moz-border-radius: 20px 20px 20px 20px;-webkit-border-radius: 20px 20px 20px 20px;box-shadow: 1px 4px 6px 1px #999999;-moz-box-shadow: 1px 4px 6px 1px #999999;-webkit-box-shadow: 1px 4px 6px 1px #999999;margin: -5px 15px 1px 5px;'&gt;&lt;/a&gt;&lt;strong&gt; ${title}&lt;/strong&gt;&lt;a href='${linkshareurl}' target='_blank' rel='nofollow'&gt;&lt;img src='${storeButton}' style='vertical-align:bottom;' alt='App'&gt;&lt;/a&gt;&lt;br&gt; カテゴリ: ${category}&lt;br&gt; 販売元: &lt;a href='${selleritunes}' target='_blank' rel='nofollow'&gt;${seller}&lt;/a&gt;（サイズ: ${appsize}）&lt;br&gt; 全てのバージョンの評価: ${allverstar}（${allreviewcnt}）&lt;br&gt; ${gamecenter} ${univ}&lt;br style='clear: both;'&gt;",
    u"&lt;a href='${linkshareurl}' target='_blank' rel='nofollow'&gt;&lt;img width='75' class='alignleft' align='left' src='${icon75url}' style='border-radius: 11px 11px 11px 11px;-moz-border-radius: 11px 11px 11px 11px;-webkit-border-radius: 11px 11px 11px 11px;box-shadow: 1px 4px 6px 1px #999999;-moz-box-shadow: 1px 4px 6px 1px #999999;-webkit-box-shadow: 1px 4px 6px 1px #999999;margin: -5px 15px 1px 5px;'&gt;&lt;/a&gt;&lt;strong&gt; ${title}&lt;/strong&gt;&lt;a href='${linkshareurl}' target='_blank' rel='nofollow'&gt;&lt;img src='${storeButton}' style='vertical-align:bottom;' alt='App'&gt;&lt;/a&gt;&lt;br&gt; カテゴリ: ${category}&lt;br&gt; 販売元: &lt;a href='${selleritunes}' target='_blank' rel='nofollow'&gt;${seller}&lt;/a&gt;（サイズ: ${appsize}）&lt;br style='clear: both;'&gt;",
    u"&lt;a href='${linkshareurl}' target='_blank' rel='nofollow'&gt;&lt;strong&gt;${title}&lt;/strong&gt;&lt;/a&gt;"
]))
def chooseTemplate():
    keys = '{%s}' % ",".join(['"%s"' % k for k in templates])
    cmd = ('osascript -e '
            '\'tell application "MarsEdit"'
            ' to choose from list %s'
            ' with prompt "書式テンプレートを選択してください"'
            ' cancel button name "Cancel"'
            ' without multiple selections allowed\''
            ) % keys
    p = subprocess.Popen(cmd, shell=True, close_fds=True,
            stdin=subprocess.PIPE,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE)
    (stdout, stderr) = p.communicate(None)
    key = stdout.rstrip('\n')

    result = ''
    if key == 'false':
        result = None
    else:
        result = templatesDict[key]
    return result

def searchApp(kwd, knd, cnt):
    url_base = "http://itunes.apple.com/search?"

    url = url_base + urllib.urlencode({'term': kwd,
            'country': 'JP',
            'entity': knd,
            'limit': cnt});

    result = json.load(urllib.urlopen(url, proxies=proxies))
    if result['resultCount'] == 0:
        return None
    else:
        return result['results']

def chooseApp(searchResult):
    count = len(searchResult)
    i = 1
    for result in searchResult:
        appname = result['trackCensoredName'].encode('utf-8')
        version = result['version'].encode('utf-8')
        if result['price'] == 0:
            price = "無料"
        else:
            price = "￥" + locale.currency(int(result['price']),
                    symbol=False, grouping=True)
        title = "%s %s (%s)" % (appname, version, price)
        cmd = ('osascript -e '
                '\'tell application "MarsEdit"'
                ' to display dialog "[%d/%d] %s"'
                ' buttons {"Cancel", "OK"} default button "OK"\''
                ) % (i, count, title)
        i = i + 1
        p = subprocess.Popen(cmd, shell=True, close_fds=True,
                stdin=subprocess.PIPE,
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE)
        (stdout, stderr) = p.communicate(None)
        line = stdout.rstrip('\n')
        if p.returncode != 0:
            continue
        response = line.split(',')[0].split(':')[1]
        if response == 'OK':
            return result
    return None

def linkShareUrl(url, aff):
    return u"http://click.linksynergy.com/fs-bin/stat?" + urllib.urlencode({
            'id': aff,
            'offerid': "94348",
            'type': "3",
            'subid': "0",
            'tmpid': "2192",
            'RD_PARM1': urllib.quote_plus(url + "&amp;partnerId=30")})

def getStar(val):
    star = u"&lt;img alt='' src='http://r.mzstatic.com/htmlResources/1043/web-storefront/images/rating_star.png' /&gt;"
    half = u"&lt;img alt='' src='http://r.mzstatic.com/htmlResources/1043/web-storefront/images/rating_star_half.png' /&gt;"
    if val is None:
        ret = u"無し"
    else:
        v = str(val).split(".")
        ret = star * int(v[0])
        if 1 &lt; len(v):
            ret = ret + half
    return ret

def getImgSize(url):
    width = 0
    height = 0
    data = urllib.urlopen(url, proxies=proxies).read()
    kind = imghdr.what(None, h=data)
    if kind == 'jpeg':
        start = data.find('\xff\xc0')
        if start != -1:
            start += 5
            (height, width) = struct.unpack('&gt;HH', data[start:start+4])
        # else: SOF0 is not found!
    elif kind == 'png':
        (width, height) = struct.unpack('&gt;II', data[16:24])
    return (width, height)

def getWidth(url, scs):
    result = 0
    (width, height) = getImgSize(url)
    if height &lt; width:
        result = int(scs)
    else:
        result = round(int(scs) * ((float(width) / height)))
    return result

def hasValue(jsonData, key):
    return key in jsonData and jsonData[key] is not None

def getValue(jsonData, key):
    if hasValue(jsonData, key):
        return jsonData[key]
    else:
        return ""

def getApp(jsonData, knd, scs, ipd, mac, aff, fmt):
    app = {}
    app['appname'] = getValue(jsonData, 'trackCensoredName')
    app['version'] = getValue(jsonData, 'version')
    if not hasValue(jsonData, 'price'):
        app['price'] = u"?"
    elif jsonData['price'] == 0:
        app['price'] = u"無料"
    else:
        app['price'] = u"￥" + locale.currency(int(jsonData['price']),
                symbol=False, grouping=True)
    app['title'] = "%s %s (%s)" % (app['appname'], app['version'], app['price'])
    app['category'] = ", ".join(getValue(jsonData, 'genres'))
    if not hasValue(jsonData, 'fileSizeBytes'):
        app['appsize'] = u"?"
    else:
        app['appsize'] = str(round(int(jsonData['fileSizeBytes'])/1000000.0 * 10) / 10) + u" MB"
    app['pubdate'] = getValue(jsonData, 'releaseDate').replace("-", "/").split("T")[0]
    app['seller'] = "%s - %s" % (getValue(jsonData, 'artistName'), getValue(jsonData, 'sellerName'))
    app['sellersite'] = getValue(jsonData, 'sellerUrl')
    if aff == "":
        app['selleritunes'] = getValue(jsonData, 'artistViewUrl')
        app['linkshareurl'] = getValue(jsonData, 'trackViewUrl')
    else:
        app['selleritunes'] = linkShareUrl(getValue(jsonData, 'artistViewUrl'), aff)
        app['linkshareurl'] = linkShareUrl(getValue(jsonData, 'trackViewUrl'), aff)
    app['url'] = getValue(jsonData, 'trackViewUrl')

    (iconUrlBase, nil, nil) = getValue(jsonData, 'artworkUrl100').replace("512x512-75.", "").rpartition(".")
    app['icon175url'] = iconUrlBase + ".175x175-75.png"
    app['icon100url'] = iconUrlBase + ".100x100-75.png"
    app['icon75url'] = iconUrlBase + ".75x75-65.png"
    app['icon53url'] = iconUrlBase + ".53x53075.png"

    # Store Button
    if knd == "macSoftware":
        app['storeButton'] = 'http://r.mzstatic.com/images/web/linkmaker/badge_macappstore-sm.gif'
    else:
        app['storeButton'] = 'http://r.mzstatic.com/images/web/linkmaker/badge_appstore-sm.gif'

    # Mac の場合はない(moveos, os, gamecenter, univ)
    app['moveos'] = u""
    app['os'] = u""
    app['gamecenter'] = u""
    app['univ'] = u""
    if knd != "macSoftware":
        app['moveos'] = ", ".join(getValue(jsonData, 'supportedDevices'))
        if app['moveos'].find("all") != -1:
            app['os'] = u"iPhone"
        elif app['moveos'].find("iPhone") != -1:
            app['os'] = u"iPhone"
        elif app['moveos'].find("iPad") != -1:
            app['os'] = u"iPad"
        features = getValue(jsonData, 'features')
        if features and 'gameCenter' in features:
            app['gamecenter'] = u"&lt;img width='100' alt='GameCenter対応' src='http://r.mzstatic.com/htmlResources/1043/web-storefront/images/gc_badge.png'&gt;"
        if features and 'iosUniversal' in features:
            app['univ'] = u"&lt;img alt='+' src='http://r.mzstatic.com/htmlResources/1043/web-storefront/images/fat-binary-badge-web.png' /&gt;iPhone/iPadの両方に対応"

    app['lang'] = ", ".join(getValue(jsonData, 'languageCodesISO2A'))
    app['rating'] = getValue(jsonData, 'trackContentRating')

    if hasValue(jsonData, 'averageUserRatingForCurrentVersion'):
        app['curverrating'] = jsonData['averageUserRatingForCurrentVersion']
        app['curverstar'] = getStar(jsonData['averageUserRatingForCurrentVersion'])
    else:
        app['curverrating'] = u"無し"
        app['curverstar'] = u"無し"

    if hasValue(jsonData, 'userRatingCountForCurrentVersion'):
        app['curreviewcnt'] = locale.currency(
                jsonData['userRatingCountForCurrentVersion'],
                symbol=False, grouping=True)
    else:
        app['curreviewcnt'] = u"0"
    app['curreviewcnt'] = app['curreviewcnt'] + u"件の評価"

    if hasValue(jsonData, 'averageUserRating'):
        app['allverrating'] = jsonData['averageUserRating']
        app['allverstar'] = getStar(jsonData['averageUserRating'])
    else:
        app['allverrating'] = u"無し"
        app['allverstar'] = u"無し"

    if hasValue(jsonData, 'userRatingCount'):
        app['allreviewcnt'] = locale.currency(
                jsonData['userRatingCount'],
                symbol=False, grouping=True)
    else:
        app['allreviewcnt'] = u"0"
    app['allreviewcnt'] = app['allreviewcnt'] + u"件の評価"

    app['desc'] = getValue(jsonData, 'description').replace('\n', '&lt;br /&gt;')
    app['descnew'] = getValue(jsonData, 'releaseNotes').replace('\n', '&lt;br /&gt;')

    for i in range(1, 6):
        app['image' + str(i)] = u""
        app['univimage' + str(i)] = u""
    # テンプレート文字列をチェックして必要な場合だけセットする
    # iPhone の場合は、Univスクショに iPad 画像をセット
    if knd == 'software':
        i = 1
        for ss in getValue(jsonData, 'screenshotUrls'):
            if fmt.find('image' + str(i)) != -1:
                app['image' + str(i)] = u"&lt;img alt='ss%d' src='%s' width='%dpx'&gt;" % (i, ss, getWidth(ss, scs))
            i += 1
        i = 1
        for ss in getValue(jsonData, 'ipadScreenshotUrls'):
            if fmt.find('univimage' + str(i)) != -1:
                app['univimage' + str(i)] = u"&lt;img alt='univss%d' src='%s' width='%dpx'&gt;" % (i, ss, round(getWidth(ss, ipd)))
            i += 1
    # iPad の場合は、Univスクショに iPhone 画像をセット(image, univimage)
    elif knd == 'iPadSoftware':
        i = 1
        for ss in getValue(jsonData, 'ipadScreenshotUrls'):
            if fmt.find('image' + str(i)) != -1:
                app['image' + str(i)] = u"&lt;img alt='ss%d' src='%s' width='%dpx'&gt;" % (i, ss, round(getWidth(ss, ipd)))
            i += 1
        i = 1
        for ss in getValue(jsonData, 'screenshotUrls'):
            if fmt.find('univimage' + str(i)) != -1:
                app['univimage' + str(i)] = u"&lt;img alt='univss%d' src='%s' width='%dpx'&gt;" % (i, ss, getWidth(ss, scs))
            i += 1
    # Mac の場合は、スクショのみで Univスクショは無し(image)
    elif knd == 'macSoftware':
        i = 1
        for ss in getValue(jsonData, 'screenshotUrls'):
            if fmt.find('image' + str(i)) != -1:
                app['image' + str(i)] = u"&lt;img alt='ss%d' src='%s' width='%dpx'&gt;" % (i, ss, round(getWidth(ss, mac)))
            i += 1
    return app


# main

knd = chooseAppKind()
if knd is None:
    sys.exit(0)

kwd = inputKeyword()
if kwd is None:
    sys.exit(0)

searchResult = searchApp(kwd, knd, cnt)
if searchResult is None:
    sys.exit(0)

app = chooseApp(searchResult)
if app is None:
    sys.exit(0)

fmt = chooseTemplate()
if fmt is None:
    sys.exit(0)

app = getApp(app, knd, scs, ipd, mac, aff, fmt)

result = string.Template(fmt).safe_substitute(app)
sys.stdout.write(result.encode('utf-8'))
</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>1</integer>
					<key>shell</key>
					<string>/usr/bin/python</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>76892205-F618-4A07-BEFD-011C9DE1D944</string>
				<key>Keywords</key>
				<array>
					<string>シェル</string>
					<string>スクリプト</string>
					<string>コマンド</string>
					<string>実行</string>
					<string>UNIX</string>
				</array>
				<key>OutputUUID</key>
				<string>A1BE4909-BB4E-4A54-9C48-C6E080325759</string>
				<key>UUID</key>
				<string>19A3C5C6-39A5-4EB6-B594-668117857FCC</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<false/>
				<key>location</key>
				<string>368.000000:445.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/Japanese.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<false/>
		</dict>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.1</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>AppleScript を実行</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>on run {input, parameters}	tell application "MarsEdit"		if input as text is equal to "" then			displayErrorMessage("No Apps (or Canceled).") of me			error number -128		else			set dc to count documents			if dc is equal to 0 then				make new document			end if			set currentWindow to document 1						set delim_orig to text item delimiters of AppleScript			set text item delimiters of AppleScript to return			set selected text of currentWindow to input as text			set text item delimiters of AppleScript to delim_orig			activate		end if		return input	end tellend runon displayErrorMessage(s)	display dialog (s) buttons {"OK"} default button "OK" with icon cautionend displayErrorMessage</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.1</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>FC990C74-DFDF-4DA3-BAB8-CBF38AEBCECA</string>
				<key>Keywords</key>
				<array>
					<string>実行</string>
				</array>
				<key>OutputUUID</key>
				<string>4C7EBAC7-EBEF-4A12-84DA-79B09A2FF54C</string>
				<key>UUID</key>
				<string>D7D3BAE0-C1AF-40D3-BA49-DAA72C731792</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<false/>
				<key>location</key>
				<string>368.000000:403.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Japanese.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<false/>
		</dict>
	</array>
	<key>connectors</key>
	<dict>
		<key>0119862B-7281-4493-A79C-FE51D7BAB833</key>
		<dict>
			<key>from</key>
			<string>168C68D1-8563-4E7C-A742-D6787FE51A44 - 168C68D1-8563-4E7C-A742-D6787FE51A44</string>
			<key>to</key>
			<string>19A3C5C6-39A5-4EB6-B594-668117857FCC - 19A3C5C6-39A5-4EB6-B594-668117857FCC</string>
		</dict>
		<key>0F0E3DE3-C60C-4294-A70D-FF21241F558F</key>
		<dict>
			<key>from</key>
			<string>82D60A41-E4CF-4A9C-9BA8-87450964BDF8 - 82D60A41-E4CF-4A9C-9BA8-87450964BDF8</string>
			<key>to</key>
			<string>541AD757-541A-4F60-B912-85DC2C4C7E7D - 541AD757-541A-4F60-B912-85DC2C4C7E7D</string>
		</dict>
		<key>240738EF-3AC9-4657-AC4D-7F363796921E</key>
		<dict>
			<key>from</key>
			<string>541AD757-541A-4F60-B912-85DC2C4C7E7D - 541AD757-541A-4F60-B912-85DC2C4C7E7D</string>
			<key>to</key>
			<string>19297C18-CDBE-4306-A30C-92B74DC80BA7 - 19297C18-CDBE-4306-A30C-92B74DC80BA7</string>
		</dict>
		<key>3D325516-7C0C-4842-8EFB-BDFDC1803BF6</key>
		<dict>
			<key>from</key>
			<string>19A3C5C6-39A5-4EB6-B594-668117857FCC - 19A3C5C6-39A5-4EB6-B594-668117857FCC</string>
			<key>to</key>
			<string>D7D3BAE0-C1AF-40D3-BA49-DAA72C731792 - D7D3BAE0-C1AF-40D3-BA49-DAA72C731792</string>
		</dict>
		<key>9CE07A14-A750-4959-A250-5E6A153AEC0C</key>
		<dict>
			<key>from</key>
			<string>19297C18-CDBE-4306-A30C-92B74DC80BA7 - 19297C18-CDBE-4306-A30C-92B74DC80BA7</string>
			<key>to</key>
			<string>168C68D1-8563-4E7C-A742-D6787FE51A44 - 168C68D1-8563-4E7C-A742-D6787FE51A44</string>
		</dict>
		<key>FEBEA540-2F9B-4008-AE64-489BC2FEA4F7</key>
		<dict>
			<key>from</key>
			<string>4FA05E3A-E1BE-4A29-ACCD-2A2D906F321F - 4FA05E3A-E1BE-4A29-ACCD-2A2D906F321F</string>
			<key>to</key>
			<string>82D60A41-E4CF-4A9C-9BA8-87450964BDF8 - 82D60A41-E4CF-4A9C-9BA8-87450964BDF8</string>
		</dict>
	</dict>
	<key>variables</key>
	<array>
		<dict>
			<key>UUID</key>
			<string>7364B882-558E-4E84-A59B-A718A55ACB48</string>
			<key>identifier</key>
			<string>com.apple.Automator.Variable.Text</string>
			<key>name</key>
			<string>cnt</string>
			<key>value</key>
			<array>
				<string>8</string>
			</array>
		</dict>
		<dict>
			<key>UUID</key>
			<string>747E0CFA-A954-4B86-93A7-179EFAD139CD</string>
			<key>identifier</key>
			<string>com.apple.Automator.Variable.Text</string>
			<key>name</key>
			<string>aff</string>
			<key>value</key>
			<array/>
		</dict>
		<dict>
			<key>UUID</key>
			<string>85AEEE68-07D5-4231-A52B-270AAC690764</string>
			<key>identifier</key>
			<string>com.apple.Automator.Variable.Text</string>
			<key>name</key>
			<string>scs</string>
			<key>value</key>
			<array>
				<string>320</string>
			</array>
		</dict>
		<dict>
			<key>UUID</key>
			<string>0B3B7B56-A951-4FF3-B27D-8FF98CBB6384</string>
			<key>identifier</key>
			<string>com.apple.Automator.Variable.Text</string>
			<key>name</key>
			<string>ipdScs</string>
			<key>value</key>
			<array>
				<string>480</string>
			</array>
		</dict>
		<dict>
			<key>UUID</key>
			<string>F8D7B816-BD1C-415D-BF7B-5901451BDBAA</string>
			<key>identifier</key>
			<string>com.apple.Automator.Variable.Text</string>
			<key>name</key>
			<string>macScs</string>
			<key>value</key>
			<array>
				<string>480</string>
			</array>
		</dict>
	</array>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceApplicationBundleID</key>
		<string>com.red-sweater.marsedit</string>
		<key>serviceApplicationPath</key>
		<string>/Applications/MarsEdit.app</string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
